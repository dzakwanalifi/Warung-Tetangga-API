name: Deploy to Azure Functions

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: 'warung-tetangga-api'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  PYTHON_VERSION: '3.11'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 'Resolve Project Dependencies Using Pip'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - name: 'Run Tests'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        # Install test dependencies if needed
        pip install pytest pytest-asyncio httpx
        # Run tests (skip if no tests available)
        if [ -d "tests" ]; then
          python -m pytest tests/ -v
        else
          echo "No tests directory found, skipping tests"
        fi
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        slot-name: 'Production'
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
        scm-do-build-during-deployment: true
        enable-oryx-build: true

    - name: 'Health Check'
      shell: bash
      run: |
        # Wait for deployment to be ready
        sleep 30
        
        # Health check
        HEALTH_URL="https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net/api/health"
        echo "Checking health at: $HEALTH_URL"
        
        # Retry health check up to 5 times
        for i in {1..5}; do
          if curl -f "$HEALTH_URL"; then
            echo "‚úÖ Health check passed!"
            break
          else
            echo "‚ùå Health check failed, attempt $i/5"
            if [ $i -eq 5 ]; then
              echo "üö® Health check failed after 5 attempts"
              exit 1
            fi
            sleep 10
          fi
        done

    - name: 'Deployment Notification'
      if: always()
      shell: bash
      run: |
        if [ "${{ steps.fa.outcome }}" = "success" ]; then
          echo "üéâ Deployment to Azure Functions successful!"
          echo "üîó API URL: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net"
          echo "üìã API Docs: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net/docs"
        else
          echo "‚ùå Deployment failed!"
          exit 1
        fi 